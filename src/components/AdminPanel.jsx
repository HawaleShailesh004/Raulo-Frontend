import React, { useState } from "react";

function AdminPanel({ setIsAuthenticated }) {
Â  const [items, setItems] = useState([]);
Â  const [modalStep, setModalStep] = useState(0);
Â  const [selectedType, setSelectedType] = useState("");
Â  const [formData, setFormData] = useState({});
Â  const [viewItem, setViewItem] = useState(null); // Read More modal

Â  const handleLogout = () => {
Â  Â  localStorage.removeItem("isAuthenticated");
Â  Â  setIsAuthenticated(false);
Â  };

Â  const handleAddClick = () => {
Â  Â  setSelectedType(""); // Clear type
Â  Â  setFormData({}); // Clear form data for new item
Â  Â  setModalStep(1);
Â  };

Â  const handleTypeSelect = (type) => {
Â  Â  setSelectedType(type);
Â  Â  setFormData({});
Â  Â  setModalStep(2);
Â  };

Â  const handleInputChange = (e) => {
Â  Â  const { name, value, files } = e.target;
Â  Â  // Handle file input separately, otherwise use value
Â  Â  setFormData((prev) => ({ ...prev, [name]: files ? files[0] : value }));
Â  };

Â  const handleSubmit = () => {
Â  Â  // Check if we are updating (has an ID) or adding (needs new ID)
Â  Â  const id = formData.id || Date.now(); 
Â  Â  
Â  Â  // If updating, filter out the old item, otherwise just add
Â  Â  const updatedItems = formData.id 
Â  Â  Â  Â  ? items.filter(item => item.id !== formData.id) 
Â  Â  Â  Â  : items;
Â  Â  Â  Â  
Â  Â  setItems([...updatedItems, { id, type: selectedType, data: formData }]);
Â  Â  
Â  Â  // Reset state and close modal
Â  Â  setModalStep(0);
Â  Â  setSelectedType("");
Â  Â  setFormData({});
Â  };

Â  const handleDelete = (id) => {
Â  Â  setItems(items.filter((item) => item.id !== id));
Â  Â  // Close the Read More modal if the item being viewed is deleted
Â  Â  if (viewItem && viewItem.id === id) setViewItem(null);
Â  Â  else setViewItem(null); // Close modal after successful delete from popup
Â  };

Â  const handleUpdate = (item) => {
Â  Â  setSelectedType(item.type);
Â  Â  // Include the original ID in formData to track the item being updated
Â  Â  setFormData({ id: item.id, ...item.data }); 
Â  Â  setModalStep(2); // Go directly to the form
Â  Â  setViewItem(null); // Close read more if it was open
Â  };

Â  const openReadMore = (item) => setViewItem(item);

Â  const renderCardContent = (item) => {
Â  Â  const text =
Â  Â  Â  item.type === "service"
Â  Â  Â  Â  ? item.data.description
Â  Â  Â  Â  : item.type === "testimonial"
Â  Â  Â  Â  ? item.data.text
Â  Â  Â  Â  : item.data.content || "";

Â  Â  if (!text) return null;

Â  Â  // Show collapsed content if too long
Â  Â  // Use the card's onClick to open the full view
Â  Â  return (
Â  Â  Â  <p className="mt-2 text-gray-400 text-sm italic break-words">
Â  Â  Â  Â  {text.substring(0, 100)}...
Â  Â  Â  Â  <span className="text-indigo-400 font-medium ml-1">
Â  Â  Â  Â  Â  Click to view details
Â  Â  Â  Â  </span>
Â  Â  Â  </p>
Â  Â  );
Â  };

Â  return (
Â  Â  <div className="min-h-screen bg-gray-900 p-6 sm:p-10 text-gray-100">
Â  Â  Â  {/* Header */}
Â  Â  Â  <div className="flex items-center justify-between pb-8 border-b border-gray-700 mb-10">
Â  Â  Â  Â  <h1 className="text-4xl font-extrabold text-white tracking-tight">Admin Dashboard ðŸš€</h1>
Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  onClick={handleLogout}
Â  Â  Â  Â  Â  className="bg-red-600 px-5 py-2 rounded-full shadow-lg hover:bg-red-700 transition duration-300 font-semibold text-white transform hover:scale-105"
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Logout
Â  Â  Â  Â  </button>
Â  Â  Â  </div>
{/* ---------------------------------------------------------------------- */}
Â  Â  Â  {/* Grid */}
Â  Â  Â  <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-8">
Â  Â  Â  Â  {/* Add Card */}
Â  Â  Â  Â  <div
Â  Â  Â  Â  Â  onClick={handleAddClick}
Â  Â  Â  Â  Â  className="h-48 bg-gray-800 border-2 border-dashed border-indigo-500/50 p-6 rounded-2xl shadow-xl flex items-center justify-center cursor-pointer 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â hover:bg-gray-700/70 hover:scale-[1.02] transform transition duration-300 group"
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  <span className="text-2xl font-bold text-indigo-400 group-hover:text-indigo-300 transition duration-300">
Â  Â  Â  Â  Â  Â  + Add New Item
Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  </div>

Â  Â  Â  Â  {/* Existing Cards */}
Â  Â  Â  Â  {items.map((item) => (
Â  Â  Â  Â  Â  <div
Â  Â  Â  Â  Â  Â  key={item.id}
Â  Â  Â  Â  Â  Â  onClick={() => openReadMore(item)} // Click card to open the pop-up
Â  Â  Â  Â  Â  Â  className="bg-gray-800 p-6 rounded-2xl shadow-xl border border-gray-700/50 relative transform transition duration-300 hover:scale-[1.02] hover:shadow-2xl hover:shadow-indigo-500/20 cursor-pointer flex flex-col justify-between min-h-[12rem]"
Â  Â  Â  Â  Â  >
                {/* Content Container */}
                <div>
Â  Â  Â  Â  Â  Â  <span className={`text-xs font-semibold px-3 py-1 rounded-full absolute top-3 right-3 capitalize 
Â  Â  Â  Â  Â  Â  Â  ${item.type === 'service' ? 'bg-blue-600 text-white' : 
Â  Â  Â  Â  Â  Â  Â  Â  item.type === 'testimonial' ? 'bg-green-600 text-white' : 
Â  Â  Â  Â  Â  Â  Â  Â  'bg-purple-600 text-white'}`
Â  Â  Â  Â  Â  Â  }>
Â  Â  Â  Â  Â  Â  Â  {item.type}
Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  <h2 className="text-xl font-bold mt-2 text-white truncate">
Â  Â  Â  Â  Â  Â  Â  {item.type === "service" ? item.data.name : 
Â  Â  Â  Â  Â  Â  Â  Â item.type === "testimonial" ? item.data.name : 
Â  Â  Â  Â  Â  Â  Â  Â item.data.title}
Â  Â  Â  Â  Â  Â  </h2>

Â  Â  Â  Â  Â  Â  {renderCardContent(item)}

Â  Â  Â  Â  Â  Â  {item.type === "testimonial" && item.data.photo && (
Â  Â  Â  Â  Â  Â  Â  Â  <img
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  src={URL.createObjectURL(item.data.photo)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  alt="testimonial photo"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="mt-4 w-16 h-16 rounded-full object-cover border-2 border-indigo-500"
Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  )}
                </div> {/* End of Content Container */}
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  ))}
Â  Â  Â  </div>
{/* ---------------------------------------------------------------------- */}
Â  Â  Â  {/* --- Modals Below --- */}
Â  Â  Â  {/* Add/Edit Modal (No change needed here) */}
Â  Â  Â  {modalStep > 0 && (
Â  Â  Â  Â  <div className="fixed inset-0 bg-black bg-opacity-80 backdrop-blur-sm flex items-center justify-center z-50 p-4 transition-opacity duration-300">
Â  Â  Â  Â  Â  <div className="bg-gray-800 p-8 rounded-2xl w-full max-w-lg shadow-2xl text-gray-100 border border-gray-700">
Â  Â  Â  Â  Â  Â  {modalStep === 1 && (
Â  Â  Â  Â  Â  Â  Â  <>
Â  Â  Â  Â  Â  Â  Â  Â  <h2 className="text-2xl font-bold mb-6 text-white">
Â  Â  Â  Â  Â  Â  Â  Â  Â  What type of content are you adding?
Â  Â  Â  Â  Â  Â  Â  Â  </h2>
Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex flex-col space-y-3">
Â  Â  Â  Â  Â  Â  Â  Â  Â  {["service", "testimonial", "blog"].map((type) => (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  key={type}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => handleTypeSelect(type)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="bg-indigo-600 hover:bg-indigo-700 px-4 py-3 rounded-xl transition transform hover:scale-[1.01] font-semibold text-lg"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {type.charAt(0).toUpperCase() + type.slice(1)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => setModalStep(0)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  className="mt-6 text-gray-400 hover:text-white transition font-medium"
Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Cancel
Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  </>
Â  Â  Â  Â  Â  Â  )}

Â  Â  Â  Â  Â  Â  {modalStep === 2 && (
Â  Â  Â  Â  Â  Â  Â  <>
Â  Â  Â  Â  Â  Â  Â  Â  <h2 className="text-2xl font-bold mb-6 text-white capitalize">
Â  Â  Â  Â  Â  Â  Â  Â  Â  {formData.id ? 'Update' : 'Add New'} {selectedType}
Â  Â  Â  Â  Â  Â  Â  Â  </h2>
Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex flex-col space-y-4">
Â  Â  Â  Â  Â  Â  Â  Â  Â  {selectedType === "service" && (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  name="name"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Service Name"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  value={formData.name || ""}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={handleInputChange}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="px-4 py-3 rounded-lg border border-gray-600 bg-gray-700 focus:ring-2 focus:ring-blue-500 outline-none text-gray-200 transition"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <textarea
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  name="description"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Service Description"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  rows="4"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  value={formData.description || ""}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={handleInputChange}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="px-4 py-3 rounded-lg border border-gray-600 bg-gray-700 focus:ring-2 focus:ring-blue-500 outline-none text-gray-200 transition resize-none"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </>
Â  Â  Â  Â  Â  Â  Â  Â  Â  )}

Â  Â  Â  Â  Â  Â  Â  Â  Â  {selectedType === "testimonial" && (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  name="name"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Client Name"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  value={formData.name || ""}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={handleInputChange}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="px-4 py-3 rounded-lg border border-gray-600 bg-gray-700 focus:ring-2 focus:ring-green-500 outline-none text-gray-200 transition"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <textarea
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  name="text"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Testimonial Text"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  rows="4"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  value={formData.text || ""}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={handleInputChange}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="px-4 py-3 rounded-lg border border-gray-600 bg-gray-700 focus:ring-2 focus:ring-green-500 outline-none text-gray-200 transition resize-none"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-400">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Client Photo (Optional)
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  type="file"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  name="photo"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={handleInputChange}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="mt-1 block w-full text-sm text-gray-300 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-green-500 file:text-white hover:file:bg-green-600"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </>
Â  Â  Â  Â  Â  Â  Â  Â  Â  )}

Â  Â  Â  Â  Â  Â  Â  Â  Â  {selectedType === "blog" && (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  name="title"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Blog Title"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  value={formData.title || ""}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={handleInputChange}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="px-4 py-3 rounded-lg border border-gray-600 bg-gray-700 focus:ring-2 focus:ring-purple-500 outline-none text-gray-200 transition"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <textarea
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  name="content"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Blog Content (Markdown supported)"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  rows="8"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  value={formData.content || ""}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={handleInputChange}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="px-4 py-3 rounded-lg border border-gray-600 bg-gray-700 focus:ring-2 focus:ring-purple-500 outline-none text-gray-200 transition resize-none"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </>
Â  Â  Â  Â  Â  Â  Â  Â  Â  )}

Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex justify-between items-center pt-4">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={handleSubmit}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="bg-indigo-600 px-6 py-2 rounded-lg hover:bg-indigo-700 transform transition font-bold text-white shadow-md hover:scale-[1.02]"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {formData.id ? 'Save Changes' : 'Publish'}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => setModalStep(0)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="text-gray-400 hover:text-white transition font-medium"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Cancel
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  </>
Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </div>
Â  Â  Â  )}

Â  Â  Â  {/* Read More Modal (Updated with Delete button) */}
Â  Â  Â  {viewItem && (
Â  Â  Â  Â  <div className="fixed inset-0 bg-black bg-opacity-80 backdrop-blur-sm flex items-center justify-center z-50 p-4 transition-opacity duration-300">
Â  Â  Â  Â  Â  <div className="bg-gray-800 p-8 rounded-2xl w-full max-w-2xl shadow-2xl text-gray-100 max-h-[90vh] overflow-y-auto relative border border-gray-700">
Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  onClick={() => setViewItem(null)}
Â  Â  Â  Â  Â  Â  Â  className="absolute top-4 right-4 text-gray-400 text-2xl hover:text-white transition"
Â  Â  Â  Â  Â  Â  Â  aria-label="Close"
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  âœ•
Â  Â  Â  Â  Â  Â  </button>

Â  Â  Â  Â  Â  Â  <h2 className="text-3xl font-bold mb-6 capitalize text-white border-b border-gray-700 pb-2">
Â  Â  Â  Â  Â  Â  Â  {viewItem.type} Details
Â  Â  Â  Â  Â  Â  </h2>

Â  Â  Â  Â  Â  Â  <div className="mb-6 space-y-4">
Â  Â  Â  Â  Â  Â  Â  {viewItem.type === "service" && (
Â  Â  Â  Â  Â  Â  Â  Â  <>
Â  Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-xl font-semibold">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Name: <span className="font-normal text-indigo-400">{viewItem.data.name}</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <strong className="block mb-1 text-gray-400">Description:</strong>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-gray-300 whitespace-pre-wrap">{viewItem.data.description}</p>
Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  </>
Â  Â  Â  Â  Â  Â  Â  )}

Â  Â  Â  Â  Â  Â  Â  {viewItem.type === "testimonial" && (
Â  Â  Â  Â  Â  Â  Â  Â  <>
Â  Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-xl font-semibold">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Client: <span className="font-normal text-green-400">{viewItem.data.name}</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <strong className="block mb-1 text-gray-400">Testimonial:</strong>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-gray-300 italic whitespace-pre-wrap">"{viewItem.data.text}"</p>
Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  {viewItem.data.photo && (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <img
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  src={URL.createObjectURL(viewItem.data.photo)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  alt="Client photo"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="w-24 h-24 rounded-full object-cover border-4 border-green-500 mt-4"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  Â  Â  </>
Â  Â  Â  Â  Â  Â  Â  )}

Â  Â  Â  Â  Â  Â  Â  {viewItem.type === "blog" && (
Â  Â  Â  Â  Â  Â  Â  Â  <>
Â  Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-xl font-semibold">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Title: <span className="font-normal text-purple-400">{viewItem.data.title}</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <strong className="block mb-1 text-gray-400">Content:</strong>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-gray-300 whitespace-pre-wrap">{viewItem.data.content}</p>
Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  </>
Â  Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  {/* Action Buttons in Pop-up Panel */}
Â  Â  Â  Â  Â  Â  <div className="flex space-x-4 pt-4 border-t border-gray-700">
Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => handleUpdate(viewItem)}
Â  Â  Â  Â  Â  Â  Â  Â  className="bg-yellow-500 text-gray-900 px-5 py-2 rounded-lg hover:bg-yellow-400 transform transition font-bold shadow-md hover:scale-[1.02]"
Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Edit Item
Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => handleDelete(viewItem.id)}
Â  Â  Â  Â  Â  Â  Â  Â  className="bg-red-600 text-white px-5 py-2 ml-2 rounded-lg hover:bg-red-700 transform transition font-bold shadow-md hover:scale-[1.02]"
Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Delete Item
Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </div>
Â  Â  Â  )}
Â  Â  </div>
Â  );
}

export default AdminPanel;